<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Course</title>
  <link rel="stylesheet" href="../css/style.css">

  <%- include ('../partials/partial') %>

    <style>
      body {
        background-color: whitesmoke;
        padding: 0;
        margin: 0;
      }

      #uploadOptions {
        background-color: white;
        width: 1450px;
        padding: 20px;
        position: relative;
        top: 40px;
        font-size: 18px;
        border-radius: 10px;
        left: 20px;
      }

      #uploadViaExcel {
        margin-bottom: 20px;
      }


      #uploadFormat {
        position: relative;
        top: 100px;
        background-color: white;
        padding: 30px;
        border-radius: 10px;
        left: 20px;
        width: 93%;
      }

      #fileName {
        margin-top: 20px;
        margin-bottom: 10px;
      }

      #excelHeading {
        margin-top: 20px;
        margin-bottom: 20px;
      }

      #excelCourseSubmit,
      #excelCancel {
        margin-top: 20px;
        margin-bottom: 20px;
      }

      #viewAllCourse {
        margin-top: 150px;
        text-align: center;
        margin-left: 20px;
      }

      tr:nth-child(odd) {
        background-color: #e6f7ff;
      }

      tr:nth-child(even) {
        background-color: white;
      }

      th {
        background-color: #e6f7ff;
      }

      span {
        color: red;
      }
    </style>
</head>

<body>
  <%- include('sidebar.ejs') %>
    <%- include('header.ejs') %>
      <div id="main">

        <%- include('messageModal.ejs') %>

          <div id="uploadOptions">
            <h3>Upload Course</h3>
            <hr />
            <input type="radio" name="uploadCourse" id="uploadViaExcel" checked /> Upload Via Excel</br>
            <input type="radio" name="uploadCourse" id="uploadViaManually" /> Upload Via Manually</br>
          </div>

          <div id="uploadFormat">

          </div>
          <div id="viewAllCourse">

          </div>

          <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog"
            aria-labelledby="exampleModalCenterTitle" data-backdrop="false"
            style="background-color: rgba(0, 0, 0, 0.3);" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered setModal modal-md" role="document">
              <div class="modal-content">
                <div class="modal-header">
                  </button>
                </div>
                <div id="successModal" class="modal-body">

                </div>
                <div class="modal-footer modalFooter">
                  <button type="button" data-toggle="modal" data-target="#exampleModal" hidden></button>
                  <button type="button" class="btn btn-danger okModal" data-dismiss="modal">Ok</button>
                </div>
              </div>
            </div>
          </div>

          <%- include('editModal.ejs') %>
            <%- include('deleteModal.ejs') %>
              <%- include('deleteSuccessModal.ejs') %>

</body>
<%- include ('../partials/partial2') %>
  <script src="../js/script.js"></script>

  <script src="https://code.jquery.com/jquery-3.7.1.min.js"
    integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>


  <script>

    defaultCourseDisplay();
    showAllCourses();


    function showAllCourses() {
      dynamicGetFetch('/elective/getAllCourses', 'GET')
        .then(response => {
          console.log("Response::::: ", response);
          if (response.status === 'error') {
            window.location.href = `${response.redirectTo}`;
          } else {
            displayAllCourse(response);
          }
        })
    }

    function defaultCourseDisplay() {

      let excelPage = document.getElementById('uploadFormat');

      let excel = `<div id="heading"><h2>Upload Course file(Excel):</h2></div>
             <div>
             <input type="file" id='fileName' name = "CourseDetails" /></br>
             <button type="submit" class="btn btn-primary excelDataSubmit" id='excelCourseSubmit' >Upload</button>&nbsp;<button id='excelCancel' type="submit" class="btn btn-danger excelDataCancel" >Cancel</button>
             </div>
             </div>
             <div id='displayNote'><a style="text-decoration:none;font-size:20px;" class="text-danger" href="/excel/Course_Excel.xlsx" id="downloadExcel"  >Download Sample Template</a></br>
             <h4 id="excelHeading">Excel Format:</h4>
             <p>Subject Name | Department Name | Campus(Optional) | No. Of Batches | Max Capacity Per Batch | Open To All Programs</p>
             </div>`;

      excelPage.innerHTML = excel;

    }

    document.getElementById('uploadViaExcel').addEventListener('change', () => {

      let excelPage = document.getElementById('uploadFormat');

      let excel = `<div id="heading"><h2>Upload Course file(Excel):</h2></div>
             <div>
             <input type="file" id='fileName' name = "CourseDetails" /></br>
             <button type="submit" class="btn btn-primary excelDataSubmit" id='excelCourseSubmit' >Upload</button>&nbsp;<button id='excelCancel' type="submit" class="btn btn-danger excelDataCancel" >Cancel</button>
             </div>
             </div>
             <div id='displayNote'><a style="text-decoration:none;font-size:20px;" class="text-danger" href="/excel/Course_Excel.xlsx" id="downloadExcel"  >Download Sample Template</a></br>
             <h4 id="excelHeading">Excel Format:</h4>
             <p>Subject Name | Department Name | Campus(Optional) | No. Of Batches | Max Capacity Per Batch | Open To All Programs</p>
             </div>`;

      excelPage.innerHTML = excel;
    });

    document.getElementById('uploadViaManually').addEventListener('change', () => {

      let manually = document.getElementById('uploadFormat');

      let manualPage = `<div>
     <div class="form-row">
     <div class="form-group col-md-6">
      <label for="inputSubname">Course Name</label>&ensp;&ensp;<span id="SubnameError"></span>
      <input type="text" class="form-control" id="inputSubname" placeholder="Name of Subject">
     </div>
     <div class="form-group col-md-6">
      <label for="deptName">Department Name</label>&ensp;&ensp;<span id="deptError"></span>
      <input type="text" class="form-control" id="deptName" placeholder="Department Name">
     </div>
     </div>
     <div class="form-row">
     <div class="form-group col-md-6">
      <label for="inputbatch">Enter No. of Batches</label>&ensp;&ensp;<span id="batchError"></span>
      <input type="text" class="form-control" id="inputbatch" placeholder="No. of Batches">
     </div>
     <div class="form-group col-md-6">
      <label for="inputCapacity">Enter Maximum Capacity Per Batch</label>&ensp;&ensp;<span id="capacityError"></span>
      <input type="text" class="form-control" id="inputCapacity" placeholder="Maximum Capacity Per Batch">
     </div>
     </div>
     <div class="form-group">
    <label for="inputCampus">Campus</label>&ensp;&ensp;<span id="campusError"></span>
    <select id="inputCampus" class="form-control">
        <option selected>Select Campus</option>
        <% campus.forEach(data => { %>
           <option value='<%= data.campus_name %>'><%= data.campus_name %></option>
        <% }); %>
      </select>
      </select>
    </div>
    <label class="form-check-label mb-2" >Open To All Programs</label>
    <div class="form-check mb-1">
    <input class="form-check-input" type="radio" name="flexRadioDefault" id="radioTypeYes" >
    <label class="form-check-label" for="flexRadioDefault1">
    Yes
    </label>
    </div>
    <div class="form-check">
    <input class="form-check-input" type="radio" name="flexRadioDefault" id="radioTypeNo" >
    <label class="form-check-label" for="flexRadioDefault2">
     No
    </label>
    </div>
    </div>
    <button type="submit" id="submitbtn" class="btn btn-danger mt-4 btnSubmit">Add</button>
    </div>`;

      manually.innerHTML = manualPage;

    });

    document.addEventListener('click', function (e) {

      //Common Delete
      if (e.target.classList.contains('deleteBtn')) {
        let courseArray = [];

        let checkInputs = document.querySelectorAll('.checkCourses');

        Array.from(checkInputs).forEach(element => {
          console.log("Check input : ", element.checked);
          if (element.checked) {
            console.log("Check input value: ", element.value);
            courseArray.push(element.value);
          }
        });

        if (courseArray.length == 0) {
          alert('Please select the Input Field !!');
        } else {

          let obj = { courseArray };
          dynamicFetchApi('/elective/commonDelete', 'POST', obj)
            .then(async response => {

              if (response.status === 'error') {
                window.location.href = `${response.redirectTo}`;
              } else {
                alert(response.message);
                let subjectRows = document.querySelectorAll('#subjectRow');

                for (let i = 0; i < subjectRows.length; i++) {
                  let value = subjectRows[i].getAttribute('data-subId');
                  for (let j = 0; j < courseArray.length; j++) {
                    if (value == courseArray[j]) {
                      subjectRows[i].remove();
                    }
                  }
                }

                let totalRows = document.querySelector('.totalRows');
                let rows = subjectRows.length - courseArray.length;
                totalRows.innerText = `${rows} Records Found`;

                if (rows == 0) {
                  let tableData = document.querySelector('#viewAllCourse');
                  let data = `<h5 class="totalRows" style="float:left;padding-bottom:10px;">${rows} Records Found</h5>
         <table class="table table-bordered table-responsive-lg ">
         <tr>
         <th>Sr No.</th>
         <th>Select</th>
         <th>Subject Name</th>
         <th>Campus</th>
         <th>Actions</th>
         </tr>
         <tr>
         <td colspan="5px">---- No Data Available ---- </td>
         <tr>
          </table>`;
                  tableData.innerHTML = data;
                }
              }
            })
        }
      }

      if (e.target.classList.contains('excelDataCancel')) {
        cancelButtonRedirect('/elective/loginPage');
      }

      //Manual Submit
      if (e.target.classList.contains('btnSubmit')) {

        let subjectName = document.getElementById('inputSubname').value;
        let department = document.getElementById('deptName').value;
        let batches = document.getElementById('inputbatch').value;
        let batchCapacity = document.getElementById('inputCapacity').value;
        let campus = document.getElementById('inputCampus').value;
        let radioTypeYes = document.getElementById('radioTypeYes');
        let radioTypeNo = document.getElementById('radioTypeNo');

        let subjectValidate = subjectValidater(subjectName);
        let departmentValidate = departmentValidater(department);
        let batchesValidate = batchesValidator(batches);
        let batchCapacityValidate = batchCapacityValidator(batchCapacity);
        let campusValidate = campusValidator(campus);

        let radioTypeValue;

        if (radioTypeYes.checked) {
          radioTypeValue = 'Yes';
        }
        if (radioTypeNo.checked) {
          radioTypeValue = 'No';
        }

        if (subjectValidate && departmentValidate && batchesValidate && batchCapacityValidate && campusValidate) {
          let obj = { subjectName, department, batches, batchCapacity, campus, radioTypeValue };
          dynamicFetchApi('/elective/insertCourseManually', 'POST', obj)
            .then(response => {
              if (response.status === 'error') {
                window.location.href = `${response.redirectTo}`;
              } else {

                showAllCourses();

                if (response.radioType === 'Yes') {

                  let msg = document.getElementById('msgModal');
                  let modalPage = `<div><h4 style="text-align:center;">${response.message}</h4></div>`
                  msg.innerHTML = modalPage;
                  document.querySelector('[data-target="#messageModal"]').click();

                } else {
                  window.location.href = `${response.redirectTo}`;
                }
              }
            });
        }
      }

      //Excel Submit
      if (e.target.classList.contains('excelDataSubmit')) {
        let excelFile = document.querySelector('#fileName');
        let file = excelFile.files[0];

        let fileName = file.name;
        let getFileExtension = fileName.substring(fileName.lastIndexOf('.'), fileName.length);

        let validateFile = fileError(getFileExtension);
        console.log('file extension::: ', validateFile);

        if (validateFile) {

          let formData = new FormData();
          formData.append('courseDetails', file);

          dynamicExcelUploadFetch('/elective/insertCourseViaExcel', 'POST', formData)
            .then(async response => {
              if (response.status === 'error') {
                window.location.href = `${response.redirectTo}`;
              } else {
                await showAllCourses();

                let msg = document.getElementById('msgModal');
                let modalPage = `<div><h4 style="text-align:center;">${response.message}</h4></div>`
                msg.innerHTML = modalPage;
                document.querySelector('[data-target="#messageModal"]').click();
              }
            });

        } else {
          let messageDisplay = `File Must Be In Excel Format Only !!`;

          let msg = document.getElementById('msgModal');
          let modalPage = `<div><h4 style="text-align:center;">${messageDisplay}</h4></div>`
          msg.innerHTML = modalPage;
          document.querySelector('[data-target="#messageModal"]').click();
        }
      }

      if (e.target.classList.contains('editCourse')) {

        let tr = e.target.closest('tr');
        let subId = e.target.closest('tr').dataset.subid;

        let subName = tr.querySelector('.subjectName').textContent;
        let campus = tr.querySelector('.campus').textContent;
        let batches = tr.querySelector('.batches').textContent;
        let capacity = tr.querySelector('.capacity').textContent;
        let dept = tr.querySelector('.dept').textContent;

        console.log('button called ', subId, batches, campus);


        let modalBody = `<div class="form-row">
    <div class="form-group col-md-6">
        <input id="inputSubId" value=${subId} hidden />
        <label for="inputSubname">Course Name</label>&ensp;&ensp;<span id="SubnameError"></span>
        <input type="text" value="${subName}" class="form-control" id="inputSubname" placeholder="Name of Subject">
    </div>
    <div class="form-group col-md-6">
        <label for="deptName">Department Name</label>&ensp;&ensp;<span id="deptError"></span>
        <input type="text" value="${dept}" class="form-control" id="deptName" placeholder="Department Name">
    </div>
</div>
<div class="form-row">
    <div class="form-group col-md-6">
        <label for="inputbatch">Enter No. of Batches</label>&ensp;&ensp;<span id="batchError"></span>
        <input type="text" value="${batches}" class="form-control" id="inputbatch" placeholder="No. of Batches">
    </div>
    <div class="form-group col-md-6">
        <label for="inputCapacity">Enter Maximum Capacity Per Batch</label>&ensp;&ensp;<span id="capacityError"></span>
        <input type="text" value="${capacity}" class="form-control" id="inputCapacity" placeholder="Maximum Capacity Per Batch">
    </div>
</div>
<div class="form-group">
    <label for="inputCampus">Campus</label>&ensp;&ensp;<span id="campusError"></span>
    <select id="campusInput" class="form-control">
        <option selected>Select Campus</option>
        <% campus.forEach(data => { %>
          <option value="<%= data.campus_name %>" <% if (data.campus_name === campus) { %> selected <% } %>><%= data.campus_name %></option>        <% }); %>
      </select>
      </select>
      <label style="margin-top:10px;" for="coursePrograms">Programs</label></br>
      <select  id="coursePrograms" multiple></select>
    </div>`;

        let mbody = document.getElementById('getModal');
        mbody.innerHTML = modalBody;

        let cmp = document.querySelector('#campusInput');
        cmp.value = campus;

        let obj = { subId };
        dynamicFetchApi('/elective/getAllCoursePrograms', 'POST', obj)
          .then(response => {
            if (response.status === 'error') {
              window.location.href = `${response.redirectTo}`;
            } else {

              let courseProgram = document.getElementById('coursePrograms');
              let programs = response.coursePrograms;

              Array.from(programs).forEach(course => {
                let option = `<option>${course.program_name}</option>`;

                console.log("courses programs ", course.program_name)
                courseProgram.insertAdjacentHTML('beforeEnd', option);
              })


            }
          })
      }

      if (e.target.classList.contains('editModal')) {

        let modalForm = (e.target).closest('div');
        let subName = $(e.target).closest('div').prev().find('#inputSubname').val();
        let deptName = $(e.target).closest('div').prev().find('#deptName').val();
        let batch = $(e.target).closest('div').prev().find('#inputbatch').val();
        let capacity = $(e.target).closest('div').prev().find('#inputCapacity').val();
        let campus = $(e.target).closest('div').prev().find('#inputCampus').val();
        let programs = $(e.target).closest('div').prev().find('#coursePrograms').val();
        let subjectId = $(e.target).closest('div').prev().find('#inputSubId').val();

        let obj = { subjectId, subName, deptName, batch, capacity, campus, programs };

        dynamicFetchApi('/elective/editCourse', 'POST', obj)
          .then(response => {
            if (response.status === 'error') {
              window.location.href = `${response.redirectTo}`;
            } else {

              let message = (response.status === 'success') ? response.message : response.message;
              let modal = document.getElementById('successModal');

              let successMessage = `<div>
        <h4 style="text-align:center;">${message}</h4>
        </div>`;

              modal.innerHTML = successMessage;

              document.querySelector('[data-target="#exampleModal"]').click();

            }
          })
      }

      if (e.target.classList.contains('okModal')) {
        showAllCourses();
      }

      if (e.target.classList.contains('deleteCourse')) {
        let subId = e.target.closest('tr').dataset.subid;

        let confirmButton = document.querySelector('.confirmDelete');
        confirmButton.setAttribute('data-id', subId);
      }

      if (e.target.classList.contains('confirmDelete')) {
        let buttonValue = document.querySelector('.confirmDelete');
        let subjectId = buttonValue.getAttribute('data-id');

        let obj = { subjectId };

        dynamicFetchApi('/elective/deleteCourse', 'POST', obj)
          .then(response => {
            if (response.status === 'error') {
              window.location.href = `${response.redirectTo}`;
            } else {

              let courseIds = document.querySelector('#subjectRow');

              let buttonvalue = document.querySelector('#DeletebtnValue');
              buttonvalue.setAttribute('data-deleteid', subjectId);

              let successModal = document.getElementById('successModal');
              successModal.innerText = response.message;

              document.querySelector('[data-target="#deleteSuccessModal"]').click();

            }
          })
      }

      if (e.target.classList.contains('SuccessModal')) {

        let courseIds = document.querySelectorAll('#subjectRow');
        let buttonvalue = document.querySelector('#DeletebtnValue');
        let subjectId = buttonvalue.getAttribute('data-deleteid');
        let modalBody = document.getElementById('successModal');
        let totalRows = document.querySelector('.totalRows');

        modalBody.innerHTML = ` <div>
                    <h4 id='successModal' style="text-align:center;">Course Deleted Successfully !!</h4>
                    </div>`;

        Array.from(courseIds).forEach(course => {
          let subId = course.getAttribute('data-subId');
          console.log('course id ', subId)
          if (subjectId === subId) {
            course.remove();
            console.log('query escecuted')
          }
        })


        let tlength = courseIds.length - 1;
        totalRows.innerText = `${tlength} Record Found`;

      }
    })

    async function displayAllCourse(response) {

      let tableInput = document.getElementById('viewAllCourse');

      let allCourses = await response.courseData ? response.courseData : [];
      let programTab = '<a href="#" ><img src="/images/plus-button.png"  data-toggle="tooltip" title = "Add Program" width="2%"/></a>';

      if (allCourses.length > 0) {

        data = `<h5 class="totalRows" style="float:left;padding-bottom:10px;">${allCourses.length} Records Found</h5>
           <table class="table table-bordered table-responsive-lg">
           <tr>
           <th>Sr No.</th>
           <th>Select</th>
           <th>Subject Name</th>
           <th>Campus</th>
           <th>Actions</th>
           </tr>
           <tr>
           <td></td>
           <td><input type="checkbox" class="selectCheckBox" /></td>
           <td></td>
           <td></td>
           <td><button id="deletebtn" class="btn btn-outline-success deleteBtn">Delete</button></td>
           </tr>
           ${allCourses.map((data, index) => `
           <tr id='subjectRow' data-subId=${data.sub_id}>
           <td>${index + 1}</td>
           <td><input type="checkbox" id="courseNameList" class="checkCourses" value=${data.sub_id} /></td>
           <td class="subjectName" data-subName=${data.subject_name} >${data.subject_name}</td>
           <td class="campus" data-campusName=${data.campus_name}>${data.campus_name}</td>
           <td class="batches" data-batches=${data.batches} hidden>${data.batches}</td>
           <td class="capacity" data-capacity=${data.max_capacity_per_batch} hidden>${data.max_capacity_per_batch}</td>
           <td class="dept" data-dept=${data.dept_name} hidden>${data.dept_name}</td>
           <td colspan="4px">
           <i style="cursor:pointer;" data-id=${data.sub_id} data-toggle="modal" data-toggle='tooltip' data-target="#deletModal" class="fa-solid fa-trash deleteCourse"></i>&ensp;
           <i style="cursor:pointer;" data-id=${data.sub_id} data-toggle="modal" data-toggle='tooltip' data-target="#exampleModalCenter" class="fa-solid fa-pen-to-square editCourse"></i></i&ensp;
           </td>
           </tr>`
        ).join('')}
           </table>`

      } else {
        data = `<h5 class="totalRows" style="float:left;padding-bottom:10px;">${allCourses.length} Records Found</h5>
           <table class="table table-bordered table-responsive-lg">
           <tr>
           <th>Sr No.</th>
           <th>Select</th>
           <th>Subject Name</th>
           <th>Campus</th>
           <th>Actions</th>
           </tr>
           <tr>
           <td colspan="5px">---------------No Data Available---------------</td>
           </tr>`
      }
      tableInput.innerHTML = data;
    }

    function subjectValidater(subject) {
      let subjectError = document.getElementById('SubnameError');

      if (subject.length > 0) {
        subjectError.innerText = '';
        return true;
      } else {
        subjectError.innerText = '*Required';
        return false;
      }
    }

    function departmentValidater(department) {
      let departMentError = document.getElementById('deptError');

      if (department.length > 0) {

        let checkAlphabets = alphabetsValidation(department);
        if (checkAlphabets) {
          departMentError.innerText = '';
          return true;
        } else {
          departMentError.innerText = '*Invalid Input Field';
          return false;
        }
      } else {
        departMentError.innerText = '*Required';
        return false;
      }
    }

    function batchesValidator(batches) {

      let batchError = document.getElementById('batchError');

      if (batches.length > 0) {

        let batchValidation = NumberValidation(batches);
        console.log("batch validation :::: ", batchValidation);

        if (batchValidation) {
          batchError.innerText = '';
          return true;
        } else {
          batchError.innerText = '*Invalid Input Field';
          return false;
        }

      } else {
        batchError.innerText = '*Required';
        return false;
      }

    }

    function batchCapacityValidator(capacity) {

      let batchCapacityError = document.getElementById('capacityError');
      if (capacity.length > 0) {

        let capacityValidation = NumberValidation(capacity);

        if (capacityValidation) {
          batchCapacityError.innerText = '';
          return true;
        } else {
          batchCapacityError.innerText = '*Invalid Input Field';
          return false;
        }

      } else {
        batchCapacityError.innerText = '*Required';
        return false;
      }
    }

    function campusValidator(campus) {

      let campusValidation = document.querySelectorAll('#inputCampus');
      let campusError = document.getElementById('campusError');
      let campusName = campusValidation[0][0].innerText;

      if (campusName != campus) {
        campusError.innerText = '';
        return true;
      } else {
        campusError.innerText = '*Invalid Input Field';
        return false;
      }

    }

    document.addEventListener('change', (e) => {
      if (e.target.classList.contains('selectCheckBox')) {
        let selectCourse = document.querySelector('.selectCheckBox')
        let checkInputs = document.querySelectorAll('.checkCourses');
        let courseArray = [];

        console.log('checked');

        if (selectCourse.checked) {

          Array.from(checkInputs).forEach(element => {
            element.setAttribute('checked', 'checked');
            let checkedValue = element.value;
            courseArray.push(checkedValue);
          })

          let obj = { courseArray };

        } else {
          let checkInputs = document.querySelectorAll('.checkCourses');
          Array.from(checkInputs).forEach(element => {
            element.removeAttribute('checked');
          })
        }
      }
    });

  </script>

</html>